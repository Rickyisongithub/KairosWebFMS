// <auto-generated />
using System;
using KairosWebAPI.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KairosWebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231031081345_FileUrlAdded")]
    partial class FileUrlAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KairosWebAPI.Models.Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.FMSLogs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("JobNum")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderNum")
                        .HasColumnType("bigint");

                    b.Property<long>("PackNum")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FMSLogs");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.Journey", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ActualHours")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CustNum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EndLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NeedByDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderHed_SysRowId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrderNum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PONum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackNum")
                        .HasColumnType("int");

                    b.Property<string>("PartNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RowMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TravelEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TravelStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleNum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.JourneyDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<long>("JourneyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JourneyId");

                    b.ToTable("JourneyDetails");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.JourneyTruck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("EndLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<long>("JourneyId")
                        .HasColumnType("bigint");

                    b.Property<string>("RowMod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JourneyId");

                    b.ToTable("JourneyTrucks");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.JourneyTruckLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Hours")
                        .HasColumnType("int");

                    b.Property<long>("JourneyTruckId")
                        .HasColumnType("bigint");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowMod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JourneyTruckId");

                    b.ToTable("TruckLocations");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.Truck", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<float?>("Commission")
                        .HasColumnType("real");

                    b.Property<string>("CurrentLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Part_Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Part_PartDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Part_PartNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Part_SalesUM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Part_UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.JourneyDetail", b =>
                {
                    b.HasOne("KairosWebAPI.Models.Entities.Journey", "Journey")
                        .WithMany("JourneyDetails")
                        .HasForeignKey("JourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.JourneyTruck", b =>
                {
                    b.HasOne("KairosWebAPI.Models.Entities.Journey", "Journey")
                        .WithMany("JourneyTrucks")
                        .HasForeignKey("JourneyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.JourneyTruckLocation", b =>
                {
                    b.HasOne("KairosWebAPI.Models.Entities.JourneyTruck", "JourneyTruck")
                        .WithMany("TruckLocations")
                        .HasForeignKey("JourneyTruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JourneyTruck");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.Journey", b =>
                {
                    b.Navigation("JourneyDetails");

                    b.Navigation("JourneyTrucks");
                });

            modelBuilder.Entity("KairosWebAPI.Models.Entities.JourneyTruck", b =>
                {
                    b.Navigation("TruckLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
